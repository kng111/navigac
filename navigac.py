
    
import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
import datetime

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤
schedule = [
    {"lesson": "1. –£—Ä–æ–∫", "start_time": "09:00", "end_time": "09:45"},
    {"lesson": "2. –£—Ä–æ–∫", "start_time": "09:50", "end_time": "10:35"},
    {"lesson": "3. –£—Ä–æ–∫", "start_time": "10:45", "end_time": "11:30"},
    {"lesson": "4. –£—Ä–æ–∫", "start_time": "11:35", "end_time": "12:20"},
    {"lesson": "5. –£—Ä–æ–∫", "start_time": "13:00", "end_time": "13:45"},
    {"lesson": "6. –£—Ä–æ–∫", "start_time": "13:50", "end_time": "14:35"},
    {"lesson": "7. –£—Ä–æ–∫", "start_time": "14:45", "end_time": "15:30"},
    {"lesson": "8. –£—Ä–æ–∫", "start_time": "15:35", "end_time": "16:20"},
    {"lesson": "9. –£—Ä–æ–∫", "start_time": "16:30", "end_time": "17:15"},
    {"lesson": "10. –£—Ä–æ–∫", "start_time": "17:20", "end_time": "18:05"}
]

def get_current_lesson():
    current_time = datetime.datetime.now().strftime("%H:%M")
    for lesson in schedule:
        if lesson["start_time"] <= current_time <= lesson["end_time"]:
            return lesson
    return None

def start(update: Update, context: CallbackContext):
    schedule_text = """ üëæ:–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä\n
      –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞ —Å–æ–≤–µ—Ç—É–µ–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è /help\n
      """
    update.message.reply_text(schedule_text)

def help(update: Update, context: CallbackContext):
    schedule_text = """ üëæ:–û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n 
    /time - –ö–∞–∫–æ–π —Å–µ–π—á–∞—Å —É—Ä–æ–∫,–∫–æ–≥–¥–∞ –æ–Ω –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è,—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞\n 
    /time1 - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ (–ø–æ —É—Ä–æ–∫–∞–º)\n 
    /time2 - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ (–ø–æ –ø–∞—Ä–∞–º)\n
    –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è üéà\n"""
    update.message.reply_text(schedule_text)

def send_schedule1(update: Update, context: CallbackContext):
    # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    # –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –∫–∞–∫–æ–º—É-–ª–∏–±–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É
    schedule_text = """üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤:\n
    1. –£—Ä–æ–∫: 09:00 - 09:45\n
    2. –£—Ä–æ–∫: 09:50 - 10:35\n
    3. –£—Ä–æ–∫: 10:45 - 11:30\n
    4. –£—Ä–æ–∫: 11:35 - 12:20\n
    5. –£—Ä–æ–∫: 13:00 - 13:45\n
    6. –£—Ä–æ–∫: 13:50 - 14:35\n
    7. –£—Ä–æ–∫: 14:45 - 15:30\n
    8. –£—Ä–æ–∫: 15:35 - 16:20\n
    9. –£—Ä–æ–∫: 16:30 - 17:15\n
    10. –£—Ä–æ–∫: 17:20 - 18:05\n
    """
    
    update.message.reply_text(schedule_text)


def send_schedule2(update: Update, context: CallbackContext):
    # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    # –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –∫–∞–∫–æ–º—É-–ª–∏–±–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É
    schedule_text = """üîî –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤:\n
    1. –ü–∞—Ä–∞: 09:00 - 10:35\n
    2. –ü–∞—Ä–∞: 10:45 - 12:20\n
    3. –ü–∞—Ä–∞: 13:00 - 14:35\n
    4. –ü–∞—Ä–∞: 14:45 - 16:20\n
    5. –ü–∞—Ä–∞: 16:30 - 18:05
    """
    
    update.message.reply_text(schedule_text)

def time1(update: Update, context: CallbackContext):
    current_lesson = get_current_lesson()
    if current_lesson:
        lesson = current_lesson["lesson"]
        end_time = current_lesson["end_time"]
        next_lesson_index = schedule.index(current_lesson) + 1
        if next_lesson_index < len(schedule):
            next_lesson_start_time = schedule[next_lesson_index]["start_time"]
            time_until_next_lesson = (
                datetime.datetime.strptime(next_lesson_start_time, "%H:%M")
                - datetime.datetime.strptime(end_time, "%H:%M")
            )
            update.message.reply_text(
                f"–í—ã —Å–µ–π—á–∞—Å –Ω–∞ {lesson}\n"
                f"üîî –£—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤ {end_time}\n"
                f"–ü–µ—Ä–µ–º–µ–Ω–Ω–∞ –±—É–¥–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –≤ {str(time_until_next_lesson)[2:]} –º–∏–Ω—É—Ç"
            )
        else:
            update.message.reply_text(
                f"–í—ã —Å–µ–π—á–∞—Å –Ω–∞ {lesson}\n"
                f"–£—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤ {end_time}\n"
                "–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —É—Ä–æ–∫ —Å–µ–≥–æ–¥–Ω—è.üí°"
            )
    else:
        update.message.reply_text("–°–µ–π—á–∞—Å –Ω–µ—Ç —É—Ä–æ–∫–æ–≤.üí°")

def main():
    # –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç BotFather
    updater = Updater(token='6297955354:AAGN-1mDkpxFcviDRyZJ6qwuNj596zTCKhU', use_context=True)

    dp = updater.dispatcher
    dp.add_handler(CommandHandler('help', help))
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CommandHandler('time', time1))
    dp.add_handler(CommandHandler('time1',send_schedule1))
    dp.add_handler(CommandHandler('time2',send_schedule2))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
